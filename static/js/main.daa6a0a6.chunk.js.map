{"version":3,"sources":["components/ThemeSwitcher.js","components/Nav.js","components/Search.js","components/Countries.js","pages/CountryInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["ThemeSwitcher","props","toggleMode","newStyles","className","icon","faMoon","onClick","style","h2","Nav","good","countriesContainerColor","Search","displaySearchedItem","toggleSearchIconDisplay","faSearch","searchIconStyle","type","name","onChange","placeholder","searchColor","Countries","data","useState","searchedValue","setSearchedValue","filteredData","setFilteredData","body","event","target","value","newFilter","filter","toLowerCase","includes","map","items","population","region","capital","flag","numericCode","to","src","alt","p","Intl","NumberFormat","format","CountryInfo","countryDetails","setCountryDetails","useParams","useEffect","api","fetch","then","response","json","href","backArrowStyle","faArrowLeft","nativeName","subregion","topLevelDomain","currencies","languages","borders","iso639_2","borderCountries","width","App","setData","appMode","setAppMode","appModeState","setAppModeState","searchIconDisplay","setSearchIconDisplay","darkModeBackground","headerColor","darkPadding","darkOverflow","countriesContainerP","navBackground","backArrowBorder","backArrowColor","backgroundColor","color","boxShadow","visibility","border","path","exact","document","activeElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.daa6a0a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon} from '@fortawesome/free-solid-svg-icons';\r\nimport  '../css/ThemeSwitcher.css';\r\n\r\n  function ThemeSwitcher(props) {\r\n    const {toggleMode, newStyles} = props\r\n    return(\r\n      <div className=\"switch\">\r\n        <FontAwesomeIcon icon={faMoon} className=\"moon-icon\" onClick={toggleMode} />\r\n        <h4 style={newStyles.h2} >Dark Mode</h4>\r\n      </div>\r\n    )\r\n  }\r\n  export default ThemeSwitcher;","import React from 'react';\r\nimport ThemeSwitcher from './ThemeSwitcher';\r\nimport '../css/Nav.css';\r\n\r\n\r\nfunction Nav(props) {\r\n  const {newStyles, toggleMode,good} = props;\r\n  return(\r\n    <div className=\"nav\" style={newStyles.countriesContainerColor}>\r\n      <div className=\"nav-items\">\r\n          <h1 style={newStyles.h2}>Where in the world?</h1>\r\n          <ThemeSwitcher newStyles={newStyles} toggleMode={toggleMode} good={good}/>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\nexport default Nav;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport '../css/Search.css';\r\n\r\n\r\nfunction Search(props) {\r\n    const {displaySearchedItem, newStyles, toggleSearchIconDisplay} = props;    \r\n\r\n  return(\r\n    <div className=\"search-container\" >\r\n      <FontAwesomeIcon \r\n        icon={faSearch} \r\n        className=\"search\" \r\n        style={newStyles.searchIconStyle}\r\n      />\r\n      <input \r\n        type=\"text\" \r\n        name=\"searchBar\" \r\n        className=\"searchInput\" \r\n        onClick={toggleSearchIconDisplay} \r\n        onChange={displaySearchedItem} \r\n        placeholder=\"Search for a country\"\r\n        // eslint-disable-next-line no-sequences\r\n        style={{...newStyles.searchColor}}\r\n        \r\n      />        \r\n    </div>\r\n  )\r\n}\r\nexport default Search;\r\n","import React,{useState} from 'react';\r\nimport Nav from './Nav';\r\nimport {Link} from 'react-router-dom'\r\nimport '../css/Countries.css';\r\nimport Search from './Search';\r\nimport  '../css/ThemeSwitcher.css';\r\n\r\n  function Countries(props) {\r\n    const {data,newStyles, toggleMode,good, toggleSearchIconDisplay} = props;\r\n    const [searchedValue, setSearchedValue] = useState(\"\") ;\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    function displaySearchedItem(event){\r\n      setSearchedValue(event.target.value)\r\n      const newFilter = data.filter((value) => {\r\n          return value.name.toLowerCase().includes(searchedValue.toLowerCase())\r\n        });\r\n        setFilteredData(newFilter)            \r\n    } \r\n\r\n    return(\r\n      <div className=\"components\" style={newStyles.body}>\r\n        <Nav \r\n          newStyles={newStyles} \r\n          toggleMode={toggleMode} \r\n          good={good}\r\n        />\r\n        <Search \r\n          displaySearchedItem={displaySearchedItem} \r\n          newStyles={newStyles} \r\n          toggleSearchIconDisplay={toggleSearchIconDisplay}\r\n        />\r\n\r\n        <div className=\"countries\">\r\n        { searchedValue === \"\" ? \r\n        data.map((items) => {\r\n          const {name, population, region, capital, flag, numericCode} = items\r\n          return( \r\n              <div key={numericCode} className=\"countries-container\" >\r\n                <div className='countries-container-individual' style={newStyles.countriesContainerColor}>\r\n                  <Link to={`/countries/${name}`} className=\"countries-link\">  \r\n                    <img src={flag} alt=\"\" className=\"flag\"/>\r\n                    <div className=\"countries-data\">\r\n                      <h2 style={newStyles.h2}> {name} </h2>\r\n                      <p style={newStyles.p}><span className=\"countries-data-items\"> Population: </span> <span className=\"countries-data-result\" style={newStyles.p}>{new Intl.NumberFormat().format(population) }</span></p>\r\n                      <p style={newStyles.p}> <span className=\"countries-data-items\"> Region: </span> <span className=\"countries-data-result\" style={newStyles.p}>{region}</span></p>\r\n                      <p style={newStyles.p}><span className=\"countries-data-items\"> Capital: </span> <span className=\"countries-data-result\" style={newStyles.p}>{capital}</span></p>\r\n                    </div>\r\n                  </Link>  \r\n                </div>  \r\n              </div>\r\n          )\r\n        }) \r\n        :                      \r\n        filteredData.map((items) => {\r\n            const {name, population, region, capital, flag, numericCode} = items;\r\n            return(\r\n              <div>                \r\n                <div key={numericCode} className=\"countries-container\" >\r\n                  <div className='countries-container-individual' style={newStyles.countriesContainerColor}>\r\n                    <Link to={`/countries/${name}`} className=\"countries-link\" >\r\n                      <img src={flag} alt=\"\" className=\"flag\"/>\r\n                      <div className=\"countries-data\">\r\n                        <h2 style={newStyles.h2}> {name} </h2>\r\n                        <p style={newStyles.p}><span className=\"countries-data-items\"> Population: </span> <span className=\"countries-data-result\" style={newStyles.p}>{new Intl.NumberFormat().format(population) }</span></p>\r\n                        <p style={newStyles.p}> <span className=\"countries-data-items\"> Region: </span> <span className=\"countries-data-result\" style={newStyles.p}>{region}</span></p>\r\n                        <p style={newStyles.p}><span className=\"countries-data-items\"> Capital: </span> <span className=\"countries-data-result\" style={newStyles.p}>{capital}</span></p>\r\n                      </div>\r\n                    </Link>\r\n                  </div>  \r\n                </div>             \r\n              </div>                        \r\n                            \r\n              )\r\n            })\r\n      \r\n        }\r\n          </div>\r\n        </div> \r\n    )\r\n  }\r\n  \r\n\r\n  export default Countries","import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport { useParams } from \"react-router-dom\"\r\nimport Nav from '../components/Nav';\r\nimport '../css/CountryInfo.css';\r\n\r\n\r\nfunction CountryInfo(props) {\r\n  const [countryDetails, setCountryDetails] = useState([])\r\n  const {name} = useParams()\r\n  const {newStyles, toggleMode,good} = props;\r\n\r\n  useEffect(() => {\r\n    const api = `https://restcountries.com/v2/name/${name}`\r\n    fetch(api)\r\n    .then(response => response.json())\r\n    .then(data => setCountryDetails(data))\r\n         \r\n  }, [name])\r\n\r\n    return(\r\n      <div className=\"country-info-main-container\" style={newStyles.body}>\r\n        <Nav newStyles={newStyles} toggleMode={toggleMode} good={good}/>\r\n        <a href=\"#\">\r\n          <button className=\"button-back\" style={newStyles.backArrowStyle}>\r\n            <FontAwesomeIcon icon={faArrowLeft} className=\"arrow-left\"/>\r\n            Back          \r\n          </button>\r\n        </a>\r\n         {\r\n        countryDetails.map((items) => {\r\n          const {flag,name, nativeName,population, region, subregion, capital, topLevelDomain, currencies, languages, borders, numericCode} = items || {}\r\n          return(\r\n                <div key={numericCode} className=\"country-info-container\">\r\n                    <img src={flag} alt=\"\" className=\"country-info-flag\"/>\r\n                    <div className=\"country-info-container-details\">\r\n                      <div className=\"country-info-details\">\r\n                        <div className=\"country-info-text\">\r\n                          <h2 style={newStyles.h2}> {name} </h2>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Native Name: </span> <span className=\"countries-data-result\" style={newStyles.p}>{nativeName}</span></p>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Population: </span> <span className=\"countries-data-result\" style={newStyles.p}>{ new Intl.NumberFormat().format(population)}</span></p>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Region: </span> <span className=\"countries-data-result\" style={newStyles.p}>{region}</span></p>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Sub Region: </span > <span className=\"countries-data-result\" style={newStyles.p}>{subregion}</span></p>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Capital: </span> <span className=\"countries-data-result\" style={newStyles.p}>{capital}</span></p>\r\n                        </div>\r\n                        <div className=\"country-info-text-2\">\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Top Level Domain: </span> <span className=\"countries-data-result\" style={newStyles.p}>{topLevelDomain}</span></p>\r\n                          <p style={newStyles.h2}><span className=\"countries-data-items\">Currencies: </span> <span className=\"countries-data-result\" style={newStyles.p}>{currencies[0].name}</span></p>\r\n                          <div style={newStyles.h2}><span className=\"countries-data-items\">Languages: </span> <span className=\"countries-data-result\">\r\n                            {\r\n                              languages.map((items) => {\r\n                                const {name, iso639_2} = items                                \r\n                                return(\r\n                                  <span key={iso639_2}  style={newStyles.p}>{ name} &nbsp;</span>                                    \r\n                                )                               \r\n                              })\r\n                            }\r\n                            </span>\r\n                          </div> \r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"country-info-borders\">  \r\n                        <h3 style={newStyles.h2}>Border Countries :</h3>\r\n                        <div className=\"country-info-borders-details\">\r\n                          { \r\n                            typeof(borders) !== 'undefined' ? \r\n\r\n                            borders.map((borderCountries)=> {\r\n                              return(\r\n                                <div key={borderCountries} className=\"border-countries\" >\r\n                                  <p className=\"border-countries-text\" style={newStyles.p}>{borderCountries}</p>\r\n                                </div>\r\n                              )\r\n                            }) : <div style={{width:\"15rem\"}}>{ `${name} does not have border countries`}</div>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                   </div>               \r\n          )\r\n        })\r\n      }\r\n      \r\n      </div>\r\n    )\r\n}\r\n         \r\n\r\nexport default CountryInfo","import '../css/App.css';\nimport React,{useState, useEffect} from 'react';\nimport Countries from './Countries';\nimport {Route, HashRouter as Router, Switch} from 'react-router-dom'\nimport CountryInfo from '../pages/CountryInfo';\n\nfunction App() {\n\n    const [data, setData] = useState([]);\n    const [appMode, setAppMode] = useState({})\n    const [appModeState, setAppModeState] = useState('false')\n    const [searchIconDisplay, setSearchIconDisplay] = useState('visible');\n\n       \n    useEffect(() => {\n\n        const api = 'https://restcountries.com/v2/all'\n        fetch(api)\n        .then(response => response.json())\n        .then(data => setData(data))\n           \n    }, [])\n    \n\n    function toggleSearchIconDisplay(event) {\n      if (event.target === document.activeElement) {\n        setSearchIconDisplay('hidden')\n      } else {\n        setSearchIconDisplay('visible')\n\n      } \n    }\n\n    function toggleMode() {\n      setAppModeState('true')\n      if (appModeState === 'true') {\n        setAppMode({\n          darkModeBackground:'hsl(207, 26%, 17%)',\n          headerColor: 'hsl(0, 0%, 100%)',\n          darkPadding:'10rem',\n          darkOverflow:'hidden',\n          countriesContainerColor:' hsl(209, 23%, 22%)',\n          countriesContainerP:'hsl(0, 0%, 100%)',\n          searchColor:'hsl(209, 23%, 22%)',\n          navBackground:'-1px 4px 4px 0px hsl(207, 26%, 17%)',\n          backArrowBorder: '1px solid hsl(209, 23%, 22%)',\n          backArrowColor:'hsl(209, 23%, 22%)'\n\n       })\n       setAppModeState(\"false\")\n\n      } else if (appModeState === 'false'){\n        setAppMode({\n          \n       })\n      }\n    }\n   \n    const newStyles = {\n      body:{\n        backgroundColor:appMode.darkModeBackground\n      },\n      h2:{\n        color:appMode.headerColor\n      },\n      p:{\n        color:appMode.countriesContainerP\n      },\n      countriesContainerColor:{\n        backgroundColor:appMode.countriesContainerColor,\n        boxShadow: appMode.navBackground\n      },\n      searchColor:{\n        backgroundColor:appMode.searchColor,\n        color:appMode.headerColor,        \n\n      },\n      searchIconStyle:{\n        color:appMode.headerColor,\n        visibility: searchIconDisplay\n\n      },\n      backArrowStyle:{\n        backgroundColor:appMode.backArrowColor,\n        border: appMode.backArrowBorder,\n        color:appMode.headerColor\n      }\n\n    }\n \n\n return(\n  <Router>\n    <Switch>\n      <Route path='/' exact>\n        <Countries\n        data={data}\n        newStyles={newStyles}\n        toggleMode={toggleMode}\n        toggleSearchIconDisplay={toggleSearchIconDisplay}\n        />\n      </Route>\n      <Route path={`/countries/:name`}>\n        <CountryInfo\n          data={data}\n          newStyles={newStyles}\n          toggleMode={toggleMode}\n        />\n      </Route>  \n    </Switch>\n  </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}